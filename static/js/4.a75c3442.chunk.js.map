{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sFCUnKC,EARI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACL,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCDfC,EAJC,SAACT,GACf,OAAO,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMU,W,yCCCrCC,EAAcC,YAAiB,IAiBtBC,cAAU,CAACC,KAAM,yBAAjBD,EAfQ,SAACb,GACtB,OACE,uBAAMe,SAAUf,EAAMgB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBH,KAAK,iBACLc,YAAY,wBACrB,8BACE,kDCoBOC,EA5BC,SAACvB,GAEf,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBN,GAAI2B,EAAE3B,IAAZ2B,EAAE3B,OAC1E4B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAE9B,OAMnF,OAAKF,EAAMiC,OAGT,sBAAK9B,UAAWC,IAAEuB,QAAlB,UAEE,qBAAKxB,UAAWC,IAAE8B,aAAlB,SACGR,IAGH,qBAAKvB,UAAWC,IAAE2B,SAAlB,SACE,8BAAMD,MAER,cAAC,EAAD,CAAgBf,SAhBA,SAACoB,GACnBnC,EAAMoC,YAAYD,EAAOE,sBAGD,cAAC,IAAD,CAAU9B,GAAI,Y,+DCdtC+B,EAA6B,SAACd,GAAD,MAAY,CAC3CS,OAAQT,EAAMe,KAAKN,S,OCeNO,sBAAQC,aAdD,SAACjB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACiB,GACxB,MAAO,CACLN,YAAa,SAACC,GACZK,EAASC,YAAmBN,UDPF,SAACO,GAAe,IAExCC,EAFuC,4JAG3C,WACE,OAAKC,KAAK9C,MAAMiC,OACT,cAAEW,EAAF,eAAgBE,KAAK9C,QADG,cAAC,IAAD,CAAUO,GAAG,eAJH,GAEbwC,IAAMH,WAStC,OAFqCH,YAAQH,EAARG,CAAoCI,KCG5DL,CACKjB","file":"static/js/4.a75c3442.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import s from './../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  let path = '/dialogs/' + props.id\n\n  return <div className={s.dialog + ' ' + s.active}>\n    <NavLink to={path}>{props.name}</NavLink>\n  </div>\n}\n\nexport default DialogItem","import s from './../Dialogs.module.css'\n\nconst Message = (props) => {\n  return <div className={s.message}>{props.message}</div>\n}\n\nexport default Message","import {maxLengthCreator, required} from \"../../../utils/validator/validators\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={Textarea}\n               validate={[required, maxLength50]}\n               name='newMessageBody'\n               placeholder='Enter you message'/></div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({form: 'dialogsAddMessageForm'})(AddMessageForm)\n\n\n","import s from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Redirect} from \"react-router-dom\"\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\n\nconst Dialogs = (props) => {\n\n  let state = props.dialogsPage\n\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>)\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody)\n  }\n\n  if (!props.isAuth) return <Redirect to={'/Login'}/>\n\n  return (\n    <div className={s.dialogs}>\n\n      <div className={s.dialogsItems}>\n        {dialogsElements}\n      </div>\n\n      <div className={s.messages}>\n        <div>{messagesElements}</div>\n      </div>\n      <AddMessageForm onSubmit={addNewMessage} />\n    </div>\n  )\n}\n\nexport default Dialogs","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to='/login'/>\n      return < Component {...this.props}/>\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n  return ConnectedAuthRedirectComponent\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody))\n    }\n  }\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect)(Dialogs)\n"],"sourceRoot":""}