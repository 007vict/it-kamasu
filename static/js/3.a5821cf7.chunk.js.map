{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","assets/images/Viktar.png","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","userPhoto","alt","Preloader","Post","item","message","count","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","postsElements","posts","map","p","likesCount","postBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userID","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","withRouter","auth","id","isAuth"],"mappings":"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","file":"static/js/3.a5821cf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"userPhoto\":\"ProfileInfo_userPhoto__1UIR7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3b6E0\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React, {useEffect, useState} from \"react\";\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false)\n  let [status, setStatus] = useState(props.status)\n\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n\n  const activeEditMode = () => {\n    setEditMode(true)\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false)\n    props.updateStatus(status)\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value)\n  }\n\n  return (\n    <div>\n      {!editMode &&\n      <div>\n        <span onDoubleClick={activeEditMode}>{props.status || '----'}</span>\n      </div>\n      }\n      {editMode &&\n      <div>\n        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\n      </div>\n      }\n    </div>\n  )\n}\n\nexport default ProfileStatusWithHooks;","export default __webpack_public_path__ + \"static/media/Viktar.e5117e8e.png\";","import React from \"react\";\nimport s from './ProfileInfo.module.css'\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/Viktar.png\";\n\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n  if (!profile) {\n    return <Preloader />\n  }\n\n  return (\n  <div>\n    <div className={s.descriptionBlock}>\n      <img src={profile.photos.large != null ? profile.photos.large : userPhoto} alt=\"\"\n           className={s.userPhoto}\n      />\n      <ProfileStatusWithHooks  status={status} updateStatus={updateStatus}/>\n    </div>\n  </div> )\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport s from './Post.module.css'\n\nconst Post = (props) => {\n  return <div className={s.item}>\n          <img src=\"https://cdn.xxl.thumbs.canstockphoto.ru/%D0%BC%D1%83%D0%B6%D1%81%D0%BA%D0%BE%D0%B9-isolated-%D0%B0%D0%B2%D0%B0%D1%82%D0%B0%D1%80-%D0%B2%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%BD%D1%8B%D0%B5-%D0%BA%D0%BB%D0%B8%D0%BF%D0%B0%D1%80%D1%82%D1%8B_csp64736665.jpg\" alt=\"\"/>\n        { props.message }\n        <div>\n          <span>{props.count} like</span>\n        </div>\n        </div>\n}\n\nexport default Post;","import React from \"react\";\nimport s from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validator/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10)\n\n\nconst MyPosts = (props) => {\n\n  let postsElements = props.posts.map(p => <Post message={p.message} count={p.likesCount}/>)\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText)\n  }\n\n  return <div className={s.postBlock}>\n    <h3>My posts</h3>\n    <AddNewPostFormRedux onSubmit={onAddPost} />\n    <div className={s.posts}>\n      {postsElements}\n    </div>\n  </div>\n}\n\nlet AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field name='newPostText' component={Textarea}\n               placeholder='Post message...'\n               validate={[required, maxLength10]} />\n      </div>\n      <div>\n        <button>Add post</button>\n        <div/>\n      </div>\n    </form>\n  )\n}\n\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\n\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText))\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return <div>\n    <ProfileInfo profile={props.profile} status={props.status}\n                 updateStatus={props.updateStatus}\n    />\n    <MyPostsContainer />\n  </div>\n}\n\nexport default Profile;","import React from \"react\";\nimport Profile from './Profile'\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom'\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    let userID = this.props.match.params.userID\n    if (!userID) {\n      userID = this.props.authorizedUserId\n      if (!userID) {\n        this.props.history.push(\"/Login\")\n      }\n    }\n    this.props.getUserProfile(userID)\n    this.props.getStatus(userID)\n  }\n\n  render() {\n    return <Profile {...this.props}\n                    profile={this.props.profile}\n                    status={this.props.status}\n                    updateStatus={this.props.updateStatus}\n    />\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.id,\n    isAuth: state.auth.isAuth\n  })\n}\n\n\nexport default compose(withRouter,\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}))\n(ProfileContainer)\n\n\n\n"],"sourceRoot":""}